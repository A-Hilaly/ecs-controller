//go:build !ignore_autogenerated

// Copyright Amazon.com Inc. or its affiliates. All Rights Reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License"). You may
// not use this file except in compliance with the License. A copy of the
// License is located at
//
//     http://aws.amazon.com/apache2.0/
//
// or in the "license" file accompanying this file. This file is distributed
// on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
// express or implied. See the License for the specific language governing
// permissions and limitations under the License.

// Code generated by ack-generate. DO NOT EDIT.

// Code generated by controller-gen. DO NOT EDIT.

package v1alpha1

import (
	corev1alpha1 "github.com/aws-controllers-k8s/runtime/apis/core/v1alpha1"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AWSVPCConfiguration) DeepCopyInto(out *AWSVPCConfiguration) {
	*out = *in
	if in.SecurityGroups != nil {
		in, out := &in.SecurityGroups, &out.SecurityGroups
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Subnets != nil {
		in, out := &in.Subnets, &out.Subnets
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AWSVPCConfiguration.
func (in *AWSVPCConfiguration) DeepCopy() *AWSVPCConfiguration {
	if in == nil {
		return nil
	}
	out := new(AWSVPCConfiguration)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Attachment) DeepCopyInto(out *Attachment) {
	*out = *in
	if in.Details != nil {
		in, out := &in.Details, &out.Details
		*out = make([]*KeyValuePair, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(KeyValuePair)
				(*in).DeepCopyInto(*out)
			}
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Attachment.
func (in *Attachment) DeepCopy() *Attachment {
	if in == nil {
		return nil
	}
	out := new(Attachment)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AttachmentStateChange) DeepCopyInto(out *AttachmentStateChange) {
	*out = *in
	if in.AttachmentARN != nil {
		in, out := &in.AttachmentARN, &out.AttachmentARN
		*out = new(string)
		**out = **in
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AttachmentStateChange.
func (in *AttachmentStateChange) DeepCopy() *AttachmentStateChange {
	if in == nil {
		return nil
	}
	out := new(AttachmentStateChange)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Attribute) DeepCopyInto(out *Attribute) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.TargetID != nil {
		in, out := &in.TargetID, &out.TargetID
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Attribute.
func (in *Attribute) DeepCopy() *Attribute {
	if in == nil {
		return nil
	}
	out := new(Attribute)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutoScalingGroupProvider) DeepCopyInto(out *AutoScalingGroupProvider) {
	*out = *in
	if in.AutoScalingGroupARN != nil {
		in, out := &in.AutoScalingGroupARN, &out.AutoScalingGroupARN
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutoScalingGroupProvider.
func (in *AutoScalingGroupProvider) DeepCopy() *AutoScalingGroupProvider {
	if in == nil {
		return nil
	}
	out := new(AutoScalingGroupProvider)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CapacityProvider) DeepCopyInto(out *CapacityProvider) {
	*out = *in
	if in.CapacityProviderARN != nil {
		in, out := &in.CapacityProviderARN, &out.CapacityProviderARN
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make([]*Tag, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(Tag)
				(*in).DeepCopyInto(*out)
			}
		}
	}
	if in.UpdateStatusReason != nil {
		in, out := &in.UpdateStatusReason, &out.UpdateStatusReason
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CapacityProvider.
func (in *CapacityProvider) DeepCopy() *CapacityProvider {
	if in == nil {
		return nil
	}
	out := new(CapacityProvider)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CapacityProviderStrategyItem) DeepCopyInto(out *CapacityProviderStrategyItem) {
	*out = *in
	if in.Base != nil {
		in, out := &in.Base, &out.Base
		*out = new(int64)
		**out = **in
	}
	if in.CapacityProvider != nil {
		in, out := &in.CapacityProvider, &out.CapacityProvider
		*out = new(string)
		**out = **in
	}
	if in.Weight != nil {
		in, out := &in.Weight, &out.Weight
		*out = new(int64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CapacityProviderStrategyItem.
func (in *CapacityProviderStrategyItem) DeepCopy() *CapacityProviderStrategyItem {
	if in == nil {
		return nil
	}
	out := new(CapacityProviderStrategyItem)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Cluster) DeepCopyInto(out *Cluster) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Cluster.
func (in *Cluster) DeepCopy() *Cluster {
	if in == nil {
		return nil
	}
	out := new(Cluster)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Cluster) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterConfiguration) DeepCopyInto(out *ClusterConfiguration) {
	*out = *in
	if in.ExecuteCommandConfiguration != nil {
		in, out := &in.ExecuteCommandConfiguration, &out.ExecuteCommandConfiguration
		*out = new(ExecuteCommandConfiguration)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterConfiguration.
func (in *ClusterConfiguration) DeepCopy() *ClusterConfiguration {
	if in == nil {
		return nil
	}
	out := new(ClusterConfiguration)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterList) DeepCopyInto(out *ClusterList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Cluster, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterList.
func (in *ClusterList) DeepCopy() *ClusterList {
	if in == nil {
		return nil
	}
	out := new(ClusterList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ClusterList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterServiceConnectDefaults) DeepCopyInto(out *ClusterServiceConnectDefaults) {
	*out = *in
	if in.Namespace != nil {
		in, out := &in.Namespace, &out.Namespace
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterServiceConnectDefaults.
func (in *ClusterServiceConnectDefaults) DeepCopy() *ClusterServiceConnectDefaults {
	if in == nil {
		return nil
	}
	out := new(ClusterServiceConnectDefaults)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterServiceConnectDefaultsRequest) DeepCopyInto(out *ClusterServiceConnectDefaultsRequest) {
	*out = *in
	if in.Namespace != nil {
		in, out := &in.Namespace, &out.Namespace
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterServiceConnectDefaultsRequest.
func (in *ClusterServiceConnectDefaultsRequest) DeepCopy() *ClusterServiceConnectDefaultsRequest {
	if in == nil {
		return nil
	}
	out := new(ClusterServiceConnectDefaultsRequest)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterSetting) DeepCopyInto(out *ClusterSetting) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterSetting.
func (in *ClusterSetting) DeepCopy() *ClusterSetting {
	if in == nil {
		return nil
	}
	out := new(ClusterSetting)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterSpec) DeepCopyInto(out *ClusterSpec) {
	*out = *in
	if in.CapacityProviders != nil {
		in, out := &in.CapacityProviders, &out.CapacityProviders
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Configuration != nil {
		in, out := &in.Configuration, &out.Configuration
		*out = new(ClusterConfiguration)
		(*in).DeepCopyInto(*out)
	}
	if in.DefaultCapacityProviderStrategy != nil {
		in, out := &in.DefaultCapacityProviderStrategy, &out.DefaultCapacityProviderStrategy
		*out = make([]*CapacityProviderStrategyItem, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(CapacityProviderStrategyItem)
				(*in).DeepCopyInto(*out)
			}
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.ServiceConnectDefaults != nil {
		in, out := &in.ServiceConnectDefaults, &out.ServiceConnectDefaults
		*out = new(ClusterServiceConnectDefaultsRequest)
		(*in).DeepCopyInto(*out)
	}
	if in.Settings != nil {
		in, out := &in.Settings, &out.Settings
		*out = make([]*ClusterSetting, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(ClusterSetting)
				(*in).DeepCopyInto(*out)
			}
		}
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make([]*Tag, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(Tag)
				(*in).DeepCopyInto(*out)
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterSpec.
func (in *ClusterSpec) DeepCopy() *ClusterSpec {
	if in == nil {
		return nil
	}
	out := new(ClusterSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterStatus) DeepCopyInto(out *ClusterStatus) {
	*out = *in
	if in.ACKResourceMetadata != nil {
		in, out := &in.ACKResourceMetadata, &out.ACKResourceMetadata
		*out = new(corev1alpha1.ResourceMetadata)
		(*in).DeepCopyInto(*out)
	}
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]*corev1alpha1.Condition, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(corev1alpha1.Condition)
				(*in).DeepCopyInto(*out)
			}
		}
	}
	if in.ActiveServicesCount != nil {
		in, out := &in.ActiveServicesCount, &out.ActiveServicesCount
		*out = new(int64)
		**out = **in
	}
	if in.Attachments != nil {
		in, out := &in.Attachments, &out.Attachments
		*out = make([]*Attachment, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(Attachment)
				(*in).DeepCopyInto(*out)
			}
		}
	}
	if in.AttachmentsStatus != nil {
		in, out := &in.AttachmentsStatus, &out.AttachmentsStatus
		*out = new(string)
		**out = **in
	}
	if in.PendingTasksCount != nil {
		in, out := &in.PendingTasksCount, &out.PendingTasksCount
		*out = new(int64)
		**out = **in
	}
	if in.RegisteredContainerInstancesCount != nil {
		in, out := &in.RegisteredContainerInstancesCount, &out.RegisteredContainerInstancesCount
		*out = new(int64)
		**out = **in
	}
	if in.RunningTasksCount != nil {
		in, out := &in.RunningTasksCount, &out.RunningTasksCount
		*out = new(int64)
		**out = **in
	}
	if in.Statistics != nil {
		in, out := &in.Statistics, &out.Statistics
		*out = make([]*KeyValuePair, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(KeyValuePair)
				(*in).DeepCopyInto(*out)
			}
		}
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterStatus.
func (in *ClusterStatus) DeepCopy() *ClusterStatus {
	if in == nil {
		return nil
	}
	out := new(ClusterStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Cluster_SDK) DeepCopyInto(out *Cluster_SDK) {
	*out = *in
	if in.ActiveServicesCount != nil {
		in, out := &in.ActiveServicesCount, &out.ActiveServicesCount
		*out = new(int64)
		**out = **in
	}
	if in.Attachments != nil {
		in, out := &in.Attachments, &out.Attachments
		*out = make([]*Attachment, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(Attachment)
				(*in).DeepCopyInto(*out)
			}
		}
	}
	if in.AttachmentsStatus != nil {
		in, out := &in.AttachmentsStatus, &out.AttachmentsStatus
		*out = new(string)
		**out = **in
	}
	if in.CapacityProviders != nil {
		in, out := &in.CapacityProviders, &out.CapacityProviders
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ClusterARN != nil {
		in, out := &in.ClusterARN, &out.ClusterARN
		*out = new(string)
		**out = **in
	}
	if in.ClusterName != nil {
		in, out := &in.ClusterName, &out.ClusterName
		*out = new(string)
		**out = **in
	}
	if in.Configuration != nil {
		in, out := &in.Configuration, &out.Configuration
		*out = new(ClusterConfiguration)
		(*in).DeepCopyInto(*out)
	}
	if in.DefaultCapacityProviderStrategy != nil {
		in, out := &in.DefaultCapacityProviderStrategy, &out.DefaultCapacityProviderStrategy
		*out = make([]*CapacityProviderStrategyItem, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(CapacityProviderStrategyItem)
				(*in).DeepCopyInto(*out)
			}
		}
	}
	if in.PendingTasksCount != nil {
		in, out := &in.PendingTasksCount, &out.PendingTasksCount
		*out = new(int64)
		**out = **in
	}
	if in.RegisteredContainerInstancesCount != nil {
		in, out := &in.RegisteredContainerInstancesCount, &out.RegisteredContainerInstancesCount
		*out = new(int64)
		**out = **in
	}
	if in.RunningTasksCount != nil {
		in, out := &in.RunningTasksCount, &out.RunningTasksCount
		*out = new(int64)
		**out = **in
	}
	if in.ServiceConnectDefaults != nil {
		in, out := &in.ServiceConnectDefaults, &out.ServiceConnectDefaults
		*out = new(ClusterServiceConnectDefaults)
		(*in).DeepCopyInto(*out)
	}
	if in.Settings != nil {
		in, out := &in.Settings, &out.Settings
		*out = make([]*ClusterSetting, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(ClusterSetting)
				(*in).DeepCopyInto(*out)
			}
		}
	}
	if in.Statistics != nil {
		in, out := &in.Statistics, &out.Statistics
		*out = make([]*KeyValuePair, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(KeyValuePair)
				(*in).DeepCopyInto(*out)
			}
		}
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make([]*Tag, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(Tag)
				(*in).DeepCopyInto(*out)
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Cluster_SDK.
func (in *Cluster_SDK) DeepCopy() *Cluster_SDK {
	if in == nil {
		return nil
	}
	out := new(Cluster_SDK)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Container) DeepCopyInto(out *Container) {
	*out = *in
	if in.ContainerARN != nil {
		in, out := &in.ContainerARN, &out.ContainerARN
		*out = new(string)
		**out = **in
	}
	if in.CPU != nil {
		in, out := &in.CPU, &out.CPU
		*out = new(string)
		**out = **in
	}
	if in.Image != nil {
		in, out := &in.Image, &out.Image
		*out = new(string)
		**out = **in
	}
	if in.ImageDigest != nil {
		in, out := &in.ImageDigest, &out.ImageDigest
		*out = new(string)
		**out = **in
	}
	if in.LastStatus != nil {
		in, out := &in.LastStatus, &out.LastStatus
		*out = new(string)
		**out = **in
	}
	if in.Memory != nil {
		in, out := &in.Memory, &out.Memory
		*out = new(string)
		**out = **in
	}
	if in.MemoryReservation != nil {
		in, out := &in.MemoryReservation, &out.MemoryReservation
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Reason != nil {
		in, out := &in.Reason, &out.Reason
		*out = new(string)
		**out = **in
	}
	if in.RuntimeID != nil {
		in, out := &in.RuntimeID, &out.RuntimeID
		*out = new(string)
		**out = **in
	}
	if in.TaskARN != nil {
		in, out := &in.TaskARN, &out.TaskARN
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Container.
func (in *Container) DeepCopy() *Container {
	if in == nil {
		return nil
	}
	out := new(Container)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ContainerDefinition) DeepCopyInto(out *ContainerDefinition) {
	*out = *in
	if in.Command != nil {
		in, out := &in.Command, &out.Command
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CPU != nil {
		in, out := &in.CPU, &out.CPU
		*out = new(int64)
		**out = **in
	}
	if in.CredentialSpecs != nil {
		in, out := &in.CredentialSpecs, &out.CredentialSpecs
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.DNSSearchDomains != nil {
		in, out := &in.DNSSearchDomains, &out.DNSSearchDomains
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.DNSServers != nil {
		in, out := &in.DNSServers, &out.DNSServers
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.DockerSecurityOptions != nil {
		in, out := &in.DockerSecurityOptions, &out.DockerSecurityOptions
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.EntryPoint != nil {
		in, out := &in.EntryPoint, &out.EntryPoint
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Hostname != nil {
		in, out := &in.Hostname, &out.Hostname
		*out = new(string)
		**out = **in
	}
	if in.Image != nil {
		in, out := &in.Image, &out.Image
		*out = new(string)
		**out = **in
	}
	if in.Links != nil {
		in, out := &in.Links, &out.Links
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.User != nil {
		in, out := &in.User, &out.User
		*out = new(string)
		**out = **in
	}
	if in.WorkingDirectory != nil {
		in, out := &in.WorkingDirectory, &out.WorkingDirectory
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ContainerDefinition.
func (in *ContainerDefinition) DeepCopy() *ContainerDefinition {
	if in == nil {
		return nil
	}
	out := new(ContainerDefinition)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ContainerDependency) DeepCopyInto(out *ContainerDependency) {
	*out = *in
	if in.ContainerName != nil {
		in, out := &in.ContainerName, &out.ContainerName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ContainerDependency.
func (in *ContainerDependency) DeepCopy() *ContainerDependency {
	if in == nil {
		return nil
	}
	out := new(ContainerDependency)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ContainerInstance) DeepCopyInto(out *ContainerInstance) {
	*out = *in
	if in.AgentConnected != nil {
		in, out := &in.AgentConnected, &out.AgentConnected
		*out = new(bool)
		**out = **in
	}
	if in.Attachments != nil {
		in, out := &in.Attachments, &out.Attachments
		*out = make([]*Attachment, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(Attachment)
				(*in).DeepCopyInto(*out)
			}
		}
	}
	if in.CapacityProviderName != nil {
		in, out := &in.CapacityProviderName, &out.CapacityProviderName
		*out = new(string)
		**out = **in
	}
	if in.ContainerInstanceARN != nil {
		in, out := &in.ContainerInstanceARN, &out.ContainerInstanceARN
		*out = new(string)
		**out = **in
	}
	if in.EC2InstanceID != nil {
		in, out := &in.EC2InstanceID, &out.EC2InstanceID
		*out = new(string)
		**out = **in
	}
	if in.PendingTasksCount != nil {
		in, out := &in.PendingTasksCount, &out.PendingTasksCount
		*out = new(int64)
		**out = **in
	}
	if in.RunningTasksCount != nil {
		in, out := &in.RunningTasksCount, &out.RunningTasksCount
		*out = new(int64)
		**out = **in
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
	if in.StatusReason != nil {
		in, out := &in.StatusReason, &out.StatusReason
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make([]*Tag, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(Tag)
				(*in).DeepCopyInto(*out)
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ContainerInstance.
func (in *ContainerInstance) DeepCopy() *ContainerInstance {
	if in == nil {
		return nil
	}
	out := new(ContainerInstance)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ContainerOverride) DeepCopyInto(out *ContainerOverride) {
	*out = *in
	if in.Command != nil {
		in, out := &in.Command, &out.Command
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ContainerOverride.
func (in *ContainerOverride) DeepCopy() *ContainerOverride {
	if in == nil {
		return nil
	}
	out := new(ContainerOverride)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ContainerStateChange) DeepCopyInto(out *ContainerStateChange) {
	*out = *in
	if in.ContainerName != nil {
		in, out := &in.ContainerName, &out.ContainerName
		*out = new(string)
		**out = **in
	}
	if in.ImageDigest != nil {
		in, out := &in.ImageDigest, &out.ImageDigest
		*out = new(string)
		**out = **in
	}
	if in.Reason != nil {
		in, out := &in.Reason, &out.Reason
		*out = new(string)
		**out = **in
	}
	if in.RuntimeID != nil {
		in, out := &in.RuntimeID, &out.RuntimeID
		*out = new(string)
		**out = **in
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ContainerStateChange.
func (in *ContainerStateChange) DeepCopy() *ContainerStateChange {
	if in == nil {
		return nil
	}
	out := new(ContainerStateChange)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Deployment) DeepCopyInto(out *Deployment) {
	*out = *in
	if in.CapacityProviderStrategy != nil {
		in, out := &in.CapacityProviderStrategy, &out.CapacityProviderStrategy
		*out = make([]*CapacityProviderStrategyItem, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(CapacityProviderStrategyItem)
				(*in).DeepCopyInto(*out)
			}
		}
	}
	if in.DesiredCount != nil {
		in, out := &in.DesiredCount, &out.DesiredCount
		*out = new(int64)
		**out = **in
	}
	if in.FailedTasks != nil {
		in, out := &in.FailedTasks, &out.FailedTasks
		*out = new(int64)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.PendingCount != nil {
		in, out := &in.PendingCount, &out.PendingCount
		*out = new(int64)
		**out = **in
	}
	if in.PlatformFamily != nil {
		in, out := &in.PlatformFamily, &out.PlatformFamily
		*out = new(string)
		**out = **in
	}
	if in.PlatformVersion != nil {
		in, out := &in.PlatformVersion, &out.PlatformVersion
		*out = new(string)
		**out = **in
	}
	if in.RolloutStateReason != nil {
		in, out := &in.RolloutStateReason, &out.RolloutStateReason
		*out = new(string)
		**out = **in
	}
	if in.RunningCount != nil {
		in, out := &in.RunningCount, &out.RunningCount
		*out = new(int64)
		**out = **in
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
	if in.TaskDefinition != nil {
		in, out := &in.TaskDefinition, &out.TaskDefinition
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Deployment.
func (in *Deployment) DeepCopy() *Deployment {
	if in == nil {
		return nil
	}
	out := new(Deployment)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DeploymentAlarms) DeepCopyInto(out *DeploymentAlarms) {
	*out = *in
	if in.AlarmNames != nil {
		in, out := &in.AlarmNames, &out.AlarmNames
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Enable != nil {
		in, out := &in.Enable, &out.Enable
		*out = new(bool)
		**out = **in
	}
	if in.Rollback != nil {
		in, out := &in.Rollback, &out.Rollback
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DeploymentAlarms.
func (in *DeploymentAlarms) DeepCopy() *DeploymentAlarms {
	if in == nil {
		return nil
	}
	out := new(DeploymentAlarms)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DeploymentCircuitBreaker) DeepCopyInto(out *DeploymentCircuitBreaker) {
	*out = *in
	if in.Enable != nil {
		in, out := &in.Enable, &out.Enable
		*out = new(bool)
		**out = **in
	}
	if in.Rollback != nil {
		in, out := &in.Rollback, &out.Rollback
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DeploymentCircuitBreaker.
func (in *DeploymentCircuitBreaker) DeepCopy() *DeploymentCircuitBreaker {
	if in == nil {
		return nil
	}
	out := new(DeploymentCircuitBreaker)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Device) DeepCopyInto(out *Device) {
	*out = *in
	if in.ContainerPath != nil {
		in, out := &in.ContainerPath, &out.ContainerPath
		*out = new(string)
		**out = **in
	}
	if in.HostPath != nil {
		in, out := &in.HostPath, &out.HostPath
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Device.
func (in *Device) DeepCopy() *Device {
	if in == nil {
		return nil
	}
	out := new(Device)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DockerVolumeConfiguration) DeepCopyInto(out *DockerVolumeConfiguration) {
	*out = *in
	if in.Driver != nil {
		in, out := &in.Driver, &out.Driver
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DockerVolumeConfiguration.
func (in *DockerVolumeConfiguration) DeepCopy() *DockerVolumeConfiguration {
	if in == nil {
		return nil
	}
	out := new(DockerVolumeConfiguration)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EBSTagSpecification) DeepCopyInto(out *EBSTagSpecification) {
	*out = *in
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make([]*Tag, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(Tag)
				(*in).DeepCopyInto(*out)
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EBSTagSpecification.
func (in *EBSTagSpecification) DeepCopy() *EBSTagSpecification {
	if in == nil {
		return nil
	}
	out := new(EBSTagSpecification)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EFSAuthorizationConfig) DeepCopyInto(out *EFSAuthorizationConfig) {
	*out = *in
	if in.AccessPointID != nil {
		in, out := &in.AccessPointID, &out.AccessPointID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EFSAuthorizationConfig.
func (in *EFSAuthorizationConfig) DeepCopy() *EFSAuthorizationConfig {
	if in == nil {
		return nil
	}
	out := new(EFSAuthorizationConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EFSVolumeConfiguration) DeepCopyInto(out *EFSVolumeConfiguration) {
	*out = *in
	if in.FileSystemID != nil {
		in, out := &in.FileSystemID, &out.FileSystemID
		*out = new(string)
		**out = **in
	}
	if in.RootDirectory != nil {
		in, out := &in.RootDirectory, &out.RootDirectory
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EFSVolumeConfiguration.
func (in *EFSVolumeConfiguration) DeepCopy() *EFSVolumeConfiguration {
	if in == nil {
		return nil
	}
	out := new(EFSVolumeConfiguration)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EnvironmentFile) DeepCopyInto(out *EnvironmentFile) {
	*out = *in
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EnvironmentFile.
func (in *EnvironmentFile) DeepCopy() *EnvironmentFile {
	if in == nil {
		return nil
	}
	out := new(EnvironmentFile)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EphemeralStorage) DeepCopyInto(out *EphemeralStorage) {
	*out = *in
	if in.SizeInGiB != nil {
		in, out := &in.SizeInGiB, &out.SizeInGiB
		*out = new(int64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EphemeralStorage.
func (in *EphemeralStorage) DeepCopy() *EphemeralStorage {
	if in == nil {
		return nil
	}
	out := new(EphemeralStorage)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExecuteCommandConfiguration) DeepCopyInto(out *ExecuteCommandConfiguration) {
	*out = *in
	if in.KMSKeyID != nil {
		in, out := &in.KMSKeyID, &out.KMSKeyID
		*out = new(string)
		**out = **in
	}
	if in.LogConfiguration != nil {
		in, out := &in.LogConfiguration, &out.LogConfiguration
		*out = new(ExecuteCommandLogConfiguration)
		(*in).DeepCopyInto(*out)
	}
	if in.Logging != nil {
		in, out := &in.Logging, &out.Logging
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExecuteCommandConfiguration.
func (in *ExecuteCommandConfiguration) DeepCopy() *ExecuteCommandConfiguration {
	if in == nil {
		return nil
	}
	out := new(ExecuteCommandConfiguration)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExecuteCommandLogConfiguration) DeepCopyInto(out *ExecuteCommandLogConfiguration) {
	*out = *in
	if in.CloudWatchEncryptionEnabled != nil {
		in, out := &in.CloudWatchEncryptionEnabled, &out.CloudWatchEncryptionEnabled
		*out = new(bool)
		**out = **in
	}
	if in.CloudWatchLogGroupName != nil {
		in, out := &in.CloudWatchLogGroupName, &out.CloudWatchLogGroupName
		*out = new(string)
		**out = **in
	}
	if in.S3BucketName != nil {
		in, out := &in.S3BucketName, &out.S3BucketName
		*out = new(string)
		**out = **in
	}
	if in.S3EncryptionEnabled != nil {
		in, out := &in.S3EncryptionEnabled, &out.S3EncryptionEnabled
		*out = new(bool)
		**out = **in
	}
	if in.S3KeyPrefix != nil {
		in, out := &in.S3KeyPrefix, &out.S3KeyPrefix
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExecuteCommandLogConfiguration.
func (in *ExecuteCommandLogConfiguration) DeepCopy() *ExecuteCommandLogConfiguration {
	if in == nil {
		return nil
	}
	out := new(ExecuteCommandLogConfiguration)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FSxWindowsFileServerAuthorizationConfig) DeepCopyInto(out *FSxWindowsFileServerAuthorizationConfig) {
	*out = *in
	if in.CredentialsParameter != nil {
		in, out := &in.CredentialsParameter, &out.CredentialsParameter
		*out = new(string)
		**out = **in
	}
	if in.Domain != nil {
		in, out := &in.Domain, &out.Domain
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FSxWindowsFileServerAuthorizationConfig.
func (in *FSxWindowsFileServerAuthorizationConfig) DeepCopy() *FSxWindowsFileServerAuthorizationConfig {
	if in == nil {
		return nil
	}
	out := new(FSxWindowsFileServerAuthorizationConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FSxWindowsFileServerVolumeConfiguration) DeepCopyInto(out *FSxWindowsFileServerVolumeConfiguration) {
	*out = *in
	if in.FileSystemID != nil {
		in, out := &in.FileSystemID, &out.FileSystemID
		*out = new(string)
		**out = **in
	}
	if in.RootDirectory != nil {
		in, out := &in.RootDirectory, &out.RootDirectory
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FSxWindowsFileServerVolumeConfiguration.
func (in *FSxWindowsFileServerVolumeConfiguration) DeepCopy() *FSxWindowsFileServerVolumeConfiguration {
	if in == nil {
		return nil
	}
	out := new(FSxWindowsFileServerVolumeConfiguration)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Failure) DeepCopyInto(out *Failure) {
	*out = *in
	if in.ARN != nil {
		in, out := &in.ARN, &out.ARN
		*out = new(string)
		**out = **in
	}
	if in.Detail != nil {
		in, out := &in.Detail, &out.Detail
		*out = new(string)
		**out = **in
	}
	if in.Reason != nil {
		in, out := &in.Reason, &out.Reason
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Failure.
func (in *Failure) DeepCopy() *Failure {
	if in == nil {
		return nil
	}
	out := new(Failure)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HealthCheck) DeepCopyInto(out *HealthCheck) {
	*out = *in
	if in.Command != nil {
		in, out := &in.Command, &out.Command
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HealthCheck.
func (in *HealthCheck) DeepCopy() *HealthCheck {
	if in == nil {
		return nil
	}
	out := new(HealthCheck)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HostEntry) DeepCopyInto(out *HostEntry) {
	*out = *in
	if in.Hostname != nil {
		in, out := &in.Hostname, &out.Hostname
		*out = new(string)
		**out = **in
	}
	if in.IPAddress != nil {
		in, out := &in.IPAddress, &out.IPAddress
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HostEntry.
func (in *HostEntry) DeepCopy() *HostEntry {
	if in == nil {
		return nil
	}
	out := new(HostEntry)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HostVolumeProperties) DeepCopyInto(out *HostVolumeProperties) {
	*out = *in
	if in.SourcePath != nil {
		in, out := &in.SourcePath, &out.SourcePath
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HostVolumeProperties.
func (in *HostVolumeProperties) DeepCopy() *HostVolumeProperties {
	if in == nil {
		return nil
	}
	out := new(HostVolumeProperties)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InferenceAccelerator) DeepCopyInto(out *InferenceAccelerator) {
	*out = *in
	if in.DeviceName != nil {
		in, out := &in.DeviceName, &out.DeviceName
		*out = new(string)
		**out = **in
	}
	if in.DeviceType != nil {
		in, out := &in.DeviceType, &out.DeviceType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InferenceAccelerator.
func (in *InferenceAccelerator) DeepCopy() *InferenceAccelerator {
	if in == nil {
		return nil
	}
	out := new(InferenceAccelerator)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InferenceAcceleratorOverride) DeepCopyInto(out *InferenceAcceleratorOverride) {
	*out = *in
	if in.DeviceName != nil {
		in, out := &in.DeviceName, &out.DeviceName
		*out = new(string)
		**out = **in
	}
	if in.DeviceType != nil {
		in, out := &in.DeviceType, &out.DeviceType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InferenceAcceleratorOverride.
func (in *InferenceAcceleratorOverride) DeepCopy() *InferenceAcceleratorOverride {
	if in == nil {
		return nil
	}
	out := new(InferenceAcceleratorOverride)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KernelCapabilities) DeepCopyInto(out *KernelCapabilities) {
	*out = *in
	if in.Add != nil {
		in, out := &in.Add, &out.Add
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Drop != nil {
		in, out := &in.Drop, &out.Drop
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KernelCapabilities.
func (in *KernelCapabilities) DeepCopy() *KernelCapabilities {
	if in == nil {
		return nil
	}
	out := new(KernelCapabilities)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KeyValuePair) DeepCopyInto(out *KeyValuePair) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KeyValuePair.
func (in *KeyValuePair) DeepCopy() *KeyValuePair {
	if in == nil {
		return nil
	}
	out := new(KeyValuePair)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LoadBalancer) DeepCopyInto(out *LoadBalancer) {
	*out = *in
	if in.ContainerName != nil {
		in, out := &in.ContainerName, &out.ContainerName
		*out = new(string)
		**out = **in
	}
	if in.LoadBalancerName != nil {
		in, out := &in.LoadBalancerName, &out.LoadBalancerName
		*out = new(string)
		**out = **in
	}
	if in.TargetGroupARN != nil {
		in, out := &in.TargetGroupARN, &out.TargetGroupARN
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LoadBalancer.
func (in *LoadBalancer) DeepCopy() *LoadBalancer {
	if in == nil {
		return nil
	}
	out := new(LoadBalancer)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManagedAgent) DeepCopyInto(out *ManagedAgent) {
	*out = *in
	if in.LastStatus != nil {
		in, out := &in.LastStatus, &out.LastStatus
		*out = new(string)
		**out = **in
	}
	if in.Reason != nil {
		in, out := &in.Reason, &out.Reason
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManagedAgent.
func (in *ManagedAgent) DeepCopy() *ManagedAgent {
	if in == nil {
		return nil
	}
	out := new(ManagedAgent)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManagedAgentStateChange) DeepCopyInto(out *ManagedAgentStateChange) {
	*out = *in
	if in.ContainerName != nil {
		in, out := &in.ContainerName, &out.ContainerName
		*out = new(string)
		**out = **in
	}
	if in.Reason != nil {
		in, out := &in.Reason, &out.Reason
		*out = new(string)
		**out = **in
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManagedAgentStateChange.
func (in *ManagedAgentStateChange) DeepCopy() *ManagedAgentStateChange {
	if in == nil {
		return nil
	}
	out := new(ManagedAgentStateChange)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MountPoint) DeepCopyInto(out *MountPoint) {
	*out = *in
	if in.ContainerPath != nil {
		in, out := &in.ContainerPath, &out.ContainerPath
		*out = new(string)
		**out = **in
	}
	if in.SourceVolume != nil {
		in, out := &in.SourceVolume, &out.SourceVolume
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MountPoint.
func (in *MountPoint) DeepCopy() *MountPoint {
	if in == nil {
		return nil
	}
	out := new(MountPoint)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkBinding) DeepCopyInto(out *NetworkBinding) {
	*out = *in
	if in.BindIP != nil {
		in, out := &in.BindIP, &out.BindIP
		*out = new(string)
		**out = **in
	}
	if in.ContainerPortRange != nil {
		in, out := &in.ContainerPortRange, &out.ContainerPortRange
		*out = new(string)
		**out = **in
	}
	if in.HostPortRange != nil {
		in, out := &in.HostPortRange, &out.HostPortRange
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkBinding.
func (in *NetworkBinding) DeepCopy() *NetworkBinding {
	if in == nil {
		return nil
	}
	out := new(NetworkBinding)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkInterface) DeepCopyInto(out *NetworkInterface) {
	*out = *in
	if in.AttachmentID != nil {
		in, out := &in.AttachmentID, &out.AttachmentID
		*out = new(string)
		**out = **in
	}
	if in.IPv6Address != nil {
		in, out := &in.IPv6Address, &out.IPv6Address
		*out = new(string)
		**out = **in
	}
	if in.PrivateIPv4Address != nil {
		in, out := &in.PrivateIPv4Address, &out.PrivateIPv4Address
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkInterface.
func (in *NetworkInterface) DeepCopy() *NetworkInterface {
	if in == nil {
		return nil
	}
	out := new(NetworkInterface)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PlacementConstraint) DeepCopyInto(out *PlacementConstraint) {
	*out = *in
	if in.Expression != nil {
		in, out := &in.Expression, &out.Expression
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PlacementConstraint.
func (in *PlacementConstraint) DeepCopy() *PlacementConstraint {
	if in == nil {
		return nil
	}
	out := new(PlacementConstraint)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PlacementStrategy) DeepCopyInto(out *PlacementStrategy) {
	*out = *in
	if in.Field != nil {
		in, out := &in.Field, &out.Field
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PlacementStrategy.
func (in *PlacementStrategy) DeepCopy() *PlacementStrategy {
	if in == nil {
		return nil
	}
	out := new(PlacementStrategy)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PlatformDevice) DeepCopyInto(out *PlatformDevice) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PlatformDevice.
func (in *PlatformDevice) DeepCopy() *PlatformDevice {
	if in == nil {
		return nil
	}
	out := new(PlatformDevice)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PortMapping) DeepCopyInto(out *PortMapping) {
	*out = *in
	if in.ContainerPortRange != nil {
		in, out := &in.ContainerPortRange, &out.ContainerPortRange
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PortMapping.
func (in *PortMapping) DeepCopy() *PortMapping {
	if in == nil {
		return nil
	}
	out := new(PortMapping)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProtectedTask) DeepCopyInto(out *ProtectedTask) {
	*out = *in
	if in.ProtectionEnabled != nil {
		in, out := &in.ProtectionEnabled, &out.ProtectionEnabled
		*out = new(bool)
		**out = **in
	}
	if in.TaskARN != nil {
		in, out := &in.TaskARN, &out.TaskARN
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProtectedTask.
func (in *ProtectedTask) DeepCopy() *ProtectedTask {
	if in == nil {
		return nil
	}
	out := new(ProtectedTask)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProxyConfiguration) DeepCopyInto(out *ProxyConfiguration) {
	*out = *in
	if in.ContainerName != nil {
		in, out := &in.ContainerName, &out.ContainerName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProxyConfiguration.
func (in *ProxyConfiguration) DeepCopy() *ProxyConfiguration {
	if in == nil {
		return nil
	}
	out := new(ProxyConfiguration)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RepositoryCredentials) DeepCopyInto(out *RepositoryCredentials) {
	*out = *in
	if in.CredentialsParameter != nil {
		in, out := &in.CredentialsParameter, &out.CredentialsParameter
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RepositoryCredentials.
func (in *RepositoryCredentials) DeepCopy() *RepositoryCredentials {
	if in == nil {
		return nil
	}
	out := new(RepositoryCredentials)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Resource) DeepCopyInto(out *Resource) {
	*out = *in
	if in.IntegerValue != nil {
		in, out := &in.IntegerValue, &out.IntegerValue
		*out = new(int64)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.StringSetValue != nil {
		in, out := &in.StringSetValue, &out.StringSetValue
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Resource.
func (in *Resource) DeepCopy() *Resource {
	if in == nil {
		return nil
	}
	out := new(Resource)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ResourceRequirement) DeepCopyInto(out *ResourceRequirement) {
	*out = *in
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ResourceRequirement.
func (in *ResourceRequirement) DeepCopy() *ResourceRequirement {
	if in == nil {
		return nil
	}
	out := new(ResourceRequirement)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Secret) DeepCopyInto(out *Secret) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.ValueFrom != nil {
		in, out := &in.ValueFrom, &out.ValueFrom
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Secret.
func (in *Secret) DeepCopy() *Secret {
	if in == nil {
		return nil
	}
	out := new(Secret)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Service) DeepCopyInto(out *Service) {
	*out = *in
	if in.CapacityProviderStrategy != nil {
		in, out := &in.CapacityProviderStrategy, &out.CapacityProviderStrategy
		*out = make([]*CapacityProviderStrategyItem, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(CapacityProviderStrategyItem)
				(*in).DeepCopyInto(*out)
			}
		}
	}
	if in.ClusterARN != nil {
		in, out := &in.ClusterARN, &out.ClusterARN
		*out = new(string)
		**out = **in
	}
	if in.CreatedBy != nil {
		in, out := &in.CreatedBy, &out.CreatedBy
		*out = new(string)
		**out = **in
	}
	if in.DesiredCount != nil {
		in, out := &in.DesiredCount, &out.DesiredCount
		*out = new(int64)
		**out = **in
	}
	if in.EnableECSManagedTags != nil {
		in, out := &in.EnableECSManagedTags, &out.EnableECSManagedTags
		*out = new(bool)
		**out = **in
	}
	if in.EnableExecuteCommand != nil {
		in, out := &in.EnableExecuteCommand, &out.EnableExecuteCommand
		*out = new(bool)
		**out = **in
	}
	if in.PendingCount != nil {
		in, out := &in.PendingCount, &out.PendingCount
		*out = new(int64)
		**out = **in
	}
	if in.PlatformFamily != nil {
		in, out := &in.PlatformFamily, &out.PlatformFamily
		*out = new(string)
		**out = **in
	}
	if in.PlatformVersion != nil {
		in, out := &in.PlatformVersion, &out.PlatformVersion
		*out = new(string)
		**out = **in
	}
	if in.RoleARN != nil {
		in, out := &in.RoleARN, &out.RoleARN
		*out = new(string)
		**out = **in
	}
	if in.RunningCount != nil {
		in, out := &in.RunningCount, &out.RunningCount
		*out = new(int64)
		**out = **in
	}
	if in.ServiceARN != nil {
		in, out := &in.ServiceARN, &out.ServiceARN
		*out = new(string)
		**out = **in
	}
	if in.ServiceName != nil {
		in, out := &in.ServiceName, &out.ServiceName
		*out = new(string)
		**out = **in
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make([]*Tag, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(Tag)
				(*in).DeepCopyInto(*out)
			}
		}
	}
	if in.TaskDefinition != nil {
		in, out := &in.TaskDefinition, &out.TaskDefinition
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Service.
func (in *Service) DeepCopy() *Service {
	if in == nil {
		return nil
	}
	out := new(Service)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServiceConnecTTLSCertificateAuthority) DeepCopyInto(out *ServiceConnecTTLSCertificateAuthority) {
	*out = *in
	if in.AWSPcaAuthorityARN != nil {
		in, out := &in.AWSPcaAuthorityARN, &out.AWSPcaAuthorityARN
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServiceConnecTTLSCertificateAuthority.
func (in *ServiceConnecTTLSCertificateAuthority) DeepCopy() *ServiceConnecTTLSCertificateAuthority {
	if in == nil {
		return nil
	}
	out := new(ServiceConnecTTLSCertificateAuthority)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServiceConnecTTLSConfiguration) DeepCopyInto(out *ServiceConnecTTLSConfiguration) {
	*out = *in
	if in.KMSKey != nil {
		in, out := &in.KMSKey, &out.KMSKey
		*out = new(string)
		**out = **in
	}
	if in.RoleARN != nil {
		in, out := &in.RoleARN, &out.RoleARN
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServiceConnecTTLSConfiguration.
func (in *ServiceConnecTTLSConfiguration) DeepCopy() *ServiceConnecTTLSConfiguration {
	if in == nil {
		return nil
	}
	out := new(ServiceConnecTTLSConfiguration)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServiceConnectClientAlias) DeepCopyInto(out *ServiceConnectClientAlias) {
	*out = *in
	if in.DNSName != nil {
		in, out := &in.DNSName, &out.DNSName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServiceConnectClientAlias.
func (in *ServiceConnectClientAlias) DeepCopy() *ServiceConnectClientAlias {
	if in == nil {
		return nil
	}
	out := new(ServiceConnectClientAlias)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServiceConnectConfiguration) DeepCopyInto(out *ServiceConnectConfiguration) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.Namespace != nil {
		in, out := &in.Namespace, &out.Namespace
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServiceConnectConfiguration.
func (in *ServiceConnectConfiguration) DeepCopy() *ServiceConnectConfiguration {
	if in == nil {
		return nil
	}
	out := new(ServiceConnectConfiguration)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServiceConnectService) DeepCopyInto(out *ServiceConnectService) {
	*out = *in
	if in.DiscoveryName != nil {
		in, out := &in.DiscoveryName, &out.DiscoveryName
		*out = new(string)
		**out = **in
	}
	if in.PortName != nil {
		in, out := &in.PortName, &out.PortName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServiceConnectService.
func (in *ServiceConnectService) DeepCopy() *ServiceConnectService {
	if in == nil {
		return nil
	}
	out := new(ServiceConnectService)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServiceConnectServiceResource) DeepCopyInto(out *ServiceConnectServiceResource) {
	*out = *in
	if in.DiscoveryARN != nil {
		in, out := &in.DiscoveryARN, &out.DiscoveryARN
		*out = new(string)
		**out = **in
	}
	if in.DiscoveryName != nil {
		in, out := &in.DiscoveryName, &out.DiscoveryName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServiceConnectServiceResource.
func (in *ServiceConnectServiceResource) DeepCopy() *ServiceConnectServiceResource {
	if in == nil {
		return nil
	}
	out := new(ServiceConnectServiceResource)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServiceEvent) DeepCopyInto(out *ServiceEvent) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Message != nil {
		in, out := &in.Message, &out.Message
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServiceEvent.
func (in *ServiceEvent) DeepCopy() *ServiceEvent {
	if in == nil {
		return nil
	}
	out := new(ServiceEvent)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServiceRegistry) DeepCopyInto(out *ServiceRegistry) {
	*out = *in
	if in.ContainerName != nil {
		in, out := &in.ContainerName, &out.ContainerName
		*out = new(string)
		**out = **in
	}
	if in.RegistryARN != nil {
		in, out := &in.RegistryARN, &out.RegistryARN
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServiceRegistry.
func (in *ServiceRegistry) DeepCopy() *ServiceRegistry {
	if in == nil {
		return nil
	}
	out := new(ServiceRegistry)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Session) DeepCopyInto(out *Session) {
	*out = *in
	if in.SessionID != nil {
		in, out := &in.SessionID, &out.SessionID
		*out = new(string)
		**out = **in
	}
	if in.StreamURL != nil {
		in, out := &in.StreamURL, &out.StreamURL
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Session.
func (in *Session) DeepCopy() *Session {
	if in == nil {
		return nil
	}
	out := new(Session)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Setting) DeepCopyInto(out *Setting) {
	*out = *in
	if in.PrincipalARN != nil {
		in, out := &in.PrincipalARN, &out.PrincipalARN
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Setting.
func (in *Setting) DeepCopy() *Setting {
	if in == nil {
		return nil
	}
	out := new(Setting)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SystemControl) DeepCopyInto(out *SystemControl) {
	*out = *in
	if in.Namespace != nil {
		in, out := &in.Namespace, &out.Namespace
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SystemControl.
func (in *SystemControl) DeepCopy() *SystemControl {
	if in == nil {
		return nil
	}
	out := new(SystemControl)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Tag) DeepCopyInto(out *Tag) {
	*out = *in
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Tag.
func (in *Tag) DeepCopy() *Tag {
	if in == nil {
		return nil
	}
	out := new(Tag)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Task) DeepCopyInto(out *Task) {
	*out = *in
	if in.Attachments != nil {
		in, out := &in.Attachments, &out.Attachments
		*out = make([]*Attachment, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(Attachment)
				(*in).DeepCopyInto(*out)
			}
		}
	}
	if in.AvailabilityZone != nil {
		in, out := &in.AvailabilityZone, &out.AvailabilityZone
		*out = new(string)
		**out = **in
	}
	if in.CapacityProviderName != nil {
		in, out := &in.CapacityProviderName, &out.CapacityProviderName
		*out = new(string)
		**out = **in
	}
	if in.ClusterARN != nil {
		in, out := &in.ClusterARN, &out.ClusterARN
		*out = new(string)
		**out = **in
	}
	if in.ContainerInstanceARN != nil {
		in, out := &in.ContainerInstanceARN, &out.ContainerInstanceARN
		*out = new(string)
		**out = **in
	}
	if in.CPU != nil {
		in, out := &in.CPU, &out.CPU
		*out = new(string)
		**out = **in
	}
	if in.DesiredStatus != nil {
		in, out := &in.DesiredStatus, &out.DesiredStatus
		*out = new(string)
		**out = **in
	}
	if in.EnableExecuteCommand != nil {
		in, out := &in.EnableExecuteCommand, &out.EnableExecuteCommand
		*out = new(bool)
		**out = **in
	}
	if in.Group != nil {
		in, out := &in.Group, &out.Group
		*out = new(string)
		**out = **in
	}
	if in.LastStatus != nil {
		in, out := &in.LastStatus, &out.LastStatus
		*out = new(string)
		**out = **in
	}
	if in.Memory != nil {
		in, out := &in.Memory, &out.Memory
		*out = new(string)
		**out = **in
	}
	if in.PlatformFamily != nil {
		in, out := &in.PlatformFamily, &out.PlatformFamily
		*out = new(string)
		**out = **in
	}
	if in.PlatformVersion != nil {
		in, out := &in.PlatformVersion, &out.PlatformVersion
		*out = new(string)
		**out = **in
	}
	if in.StartedBy != nil {
		in, out := &in.StartedBy, &out.StartedBy
		*out = new(string)
		**out = **in
	}
	if in.StoppedReason != nil {
		in, out := &in.StoppedReason, &out.StoppedReason
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make([]*Tag, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(Tag)
				(*in).DeepCopyInto(*out)
			}
		}
	}
	if in.TaskARN != nil {
		in, out := &in.TaskARN, &out.TaskARN
		*out = new(string)
		**out = **in
	}
	if in.TaskDefinitionARN != nil {
		in, out := &in.TaskDefinitionARN, &out.TaskDefinitionARN
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Task.
func (in *Task) DeepCopy() *Task {
	if in == nil {
		return nil
	}
	out := new(Task)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskDefinition) DeepCopyInto(out *TaskDefinition) {
	*out = *in
	if in.CPU != nil {
		in, out := &in.CPU, &out.CPU
		*out = new(string)
		**out = **in
	}
	if in.ExecutionRoleARN != nil {
		in, out := &in.ExecutionRoleARN, &out.ExecutionRoleARN
		*out = new(string)
		**out = **in
	}
	if in.Family != nil {
		in, out := &in.Family, &out.Family
		*out = new(string)
		**out = **in
	}
	if in.Memory != nil {
		in, out := &in.Memory, &out.Memory
		*out = new(string)
		**out = **in
	}
	if in.RegisteredBy != nil {
		in, out := &in.RegisteredBy, &out.RegisteredBy
		*out = new(string)
		**out = **in
	}
	if in.Revision != nil {
		in, out := &in.Revision, &out.Revision
		*out = new(int64)
		**out = **in
	}
	if in.TaskDefinitionARN != nil {
		in, out := &in.TaskDefinitionARN, &out.TaskDefinitionARN
		*out = new(string)
		**out = **in
	}
	if in.TaskRoleARN != nil {
		in, out := &in.TaskRoleARN, &out.TaskRoleARN
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskDefinition.
func (in *TaskDefinition) DeepCopy() *TaskDefinition {
	if in == nil {
		return nil
	}
	out := new(TaskDefinition)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskDefinitionPlacementConstraint) DeepCopyInto(out *TaskDefinitionPlacementConstraint) {
	*out = *in
	if in.Expression != nil {
		in, out := &in.Expression, &out.Expression
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskDefinitionPlacementConstraint.
func (in *TaskDefinitionPlacementConstraint) DeepCopy() *TaskDefinitionPlacementConstraint {
	if in == nil {
		return nil
	}
	out := new(TaskDefinitionPlacementConstraint)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskOverride) DeepCopyInto(out *TaskOverride) {
	*out = *in
	if in.CPU != nil {
		in, out := &in.CPU, &out.CPU
		*out = new(string)
		**out = **in
	}
	if in.ExecutionRoleARN != nil {
		in, out := &in.ExecutionRoleARN, &out.ExecutionRoleARN
		*out = new(string)
		**out = **in
	}
	if in.Memory != nil {
		in, out := &in.Memory, &out.Memory
		*out = new(string)
		**out = **in
	}
	if in.TaskRoleARN != nil {
		in, out := &in.TaskRoleARN, &out.TaskRoleARN
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskOverride.
func (in *TaskOverride) DeepCopy() *TaskOverride {
	if in == nil {
		return nil
	}
	out := new(TaskOverride)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskSet) DeepCopyInto(out *TaskSet) {
	*out = *in
	if in.CapacityProviderStrategy != nil {
		in, out := &in.CapacityProviderStrategy, &out.CapacityProviderStrategy
		*out = make([]*CapacityProviderStrategyItem, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(CapacityProviderStrategyItem)
				(*in).DeepCopyInto(*out)
			}
		}
	}
	if in.ClusterARN != nil {
		in, out := &in.ClusterARN, &out.ClusterARN
		*out = new(string)
		**out = **in
	}
	if in.ComputedDesiredCount != nil {
		in, out := &in.ComputedDesiredCount, &out.ComputedDesiredCount
		*out = new(int64)
		**out = **in
	}
	if in.ExternalID != nil {
		in, out := &in.ExternalID, &out.ExternalID
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.PendingCount != nil {
		in, out := &in.PendingCount, &out.PendingCount
		*out = new(int64)
		**out = **in
	}
	if in.PlatformFamily != nil {
		in, out := &in.PlatformFamily, &out.PlatformFamily
		*out = new(string)
		**out = **in
	}
	if in.PlatformVersion != nil {
		in, out := &in.PlatformVersion, &out.PlatformVersion
		*out = new(string)
		**out = **in
	}
	if in.RunningCount != nil {
		in, out := &in.RunningCount, &out.RunningCount
		*out = new(int64)
		**out = **in
	}
	if in.ServiceARN != nil {
		in, out := &in.ServiceARN, &out.ServiceARN
		*out = new(string)
		**out = **in
	}
	if in.StartedBy != nil {
		in, out := &in.StartedBy, &out.StartedBy
		*out = new(string)
		**out = **in
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make([]*Tag, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(Tag)
				(*in).DeepCopyInto(*out)
			}
		}
	}
	if in.TaskDefinition != nil {
		in, out := &in.TaskDefinition, &out.TaskDefinition
		*out = new(string)
		**out = **in
	}
	if in.TaskSetARN != nil {
		in, out := &in.TaskSetARN, &out.TaskSetARN
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskSet.
func (in *TaskSet) DeepCopy() *TaskSet {
	if in == nil {
		return nil
	}
	out := new(TaskSet)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Tmpfs) DeepCopyInto(out *Tmpfs) {
	*out = *in
	if in.ContainerPath != nil {
		in, out := &in.ContainerPath, &out.ContainerPath
		*out = new(string)
		**out = **in
	}
	if in.MountOptions != nil {
		in, out := &in.MountOptions, &out.MountOptions
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(int64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Tmpfs.
func (in *Tmpfs) DeepCopy() *Tmpfs {
	if in == nil {
		return nil
	}
	out := new(Tmpfs)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Ulimit) DeepCopyInto(out *Ulimit) {
	*out = *in
	if in.HardLimit != nil {
		in, out := &in.HardLimit, &out.HardLimit
		*out = new(int64)
		**out = **in
	}
	if in.SoftLimit != nil {
		in, out := &in.SoftLimit, &out.SoftLimit
		*out = new(int64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Ulimit.
func (in *Ulimit) DeepCopy() *Ulimit {
	if in == nil {
		return nil
	}
	out := new(Ulimit)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VersionInfo) DeepCopyInto(out *VersionInfo) {
	*out = *in
	if in.AgentHash != nil {
		in, out := &in.AgentHash, &out.AgentHash
		*out = new(string)
		**out = **in
	}
	if in.AgentVersion != nil {
		in, out := &in.AgentVersion, &out.AgentVersion
		*out = new(string)
		**out = **in
	}
	if in.DockerVersion != nil {
		in, out := &in.DockerVersion, &out.DockerVersion
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VersionInfo.
func (in *VersionInfo) DeepCopy() *VersionInfo {
	if in == nil {
		return nil
	}
	out := new(VersionInfo)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Volume) DeepCopyInto(out *Volume) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Volume.
func (in *Volume) DeepCopy() *Volume {
	if in == nil {
		return nil
	}
	out := new(Volume)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VolumeFrom) DeepCopyInto(out *VolumeFrom) {
	*out = *in
	if in.SourceContainer != nil {
		in, out := &in.SourceContainer, &out.SourceContainer
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VolumeFrom.
func (in *VolumeFrom) DeepCopy() *VolumeFrom {
	if in == nil {
		return nil
	}
	out := new(VolumeFrom)
	in.DeepCopyInto(out)
	return out
}
